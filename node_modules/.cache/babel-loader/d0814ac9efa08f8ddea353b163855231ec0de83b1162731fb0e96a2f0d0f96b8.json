{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\react-weather\\\\src\\\\shared\\\\Popup\\\\Popup.tsx\";\nimport React from \"react\";\nimport s from \"./Popup.module.scss\";\nimport { ThisDayItem } from \"../../pages/home/components/ThisDayInfo/ThisDayItem\";\nimport { GlobalSwgSelector } from \"../../assets/icons/global/GlobalSwgSelector\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Popup = ({\n  weatherData,\n  onClose,\n  type\n}) => {\n  if (!weatherData) return null;\n  const getDayOfWeek = timestamp => {\n    const days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\n    return days[new Date(timestamp * 1000).getDay()];\n  };\n  const getTime = timestamp => {\n    return new Date(timestamp * 1000).toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getWeatherIcon = iconCode => {\n    const iconMap = {\n      '01d': 'sun',\n      '01n': 'moon',\n      '02d': 'small_sun',\n      '02n': 'small_moon',\n      '03d': 'mainly_cloudy',\n      '03n': 'mainly_cloudy',\n      '04d': 'mainly_cloudy',\n      '04n': 'mainly_cloudy',\n      '09d': 'rain',\n      '09n': 'rain',\n      '10d': 'small_rain_sun',\n      '10n': 'small_rain_moon',\n      '11d': 'lightning',\n      '11n': 'lightning',\n      '13d': 'snow',\n      '13n': 'snow',\n      '50d': 'fog',\n      '50n': 'fog'\n    };\n    return iconMap[iconCode] || 'small_sun';\n  };\n  const isCurrentWeather = data => {\n    return type === 'current';\n  };\n  const items = [{\n    icon_id: 'temp',\n    name: 'Температура',\n    value: `${Math.round(weatherData.main.temp)}° - ощущается как ${Math.round(weatherData.main.feels_like)}°`\n  }, {\n    icon_id: 'pressure',\n    name: 'Давление',\n    value: `${weatherData.main.pressure} мм рт. ст.`\n  }, {\n    icon_id: 'humidity',\n    name: 'Влажность',\n    value: `${weatherData.main.humidity}%`\n  }, {\n    icon_id: 'wind',\n    name: \"Ветер\",\n    value: `${weatherData.wind.speed} м/с`\n  }];\n  const cityName = isCurrentWeather(weatherData) ? `${weatherData.name}, ${weatherData.sys.country}` : 'Прогноз';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.blur,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.popup,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.day,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.day__temp,\n          children: [Math.round(weatherData.main.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.day__name,\n          children: getDayOfWeek(weatherData.dt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.day_img,\n          children: /*#__PURE__*/_jsxDEV(GlobalSwgSelector, {\n            id: getWeatherIcon(weatherData.weather[0].icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.day__time,\n          children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: getTime(weatherData.dt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.day__city,\n          children: [type === 'current' ? 'Город:' : 'Прогноз:', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: cityName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.this_day_info_items,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(ThisDayItem, {\n          item: item\n        }, item.icon_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.close,\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(GlobalSwgSelector, {\n          id: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","s","ThisDayItem","GlobalSwgSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Popup","weatherData","onClose","type","getDayOfWeek","timestamp","days","Date","getDay","getTime","toLocaleTimeString","hour","minute","getWeatherIcon","iconCode","iconMap","isCurrentWeather","data","items","icon_id","name","value","Math","round","main","temp","feels_like","pressure","humidity","wind","speed","cityName","sys","country","children","className","blur","onClick","fileName","_jsxFileName","lineNumber","columnNumber","popup","day","day__temp","day__name","dt","day_img","id","weather","icon","day__time","day__city","this_day_info_items","map","item","close","_c","$RefreshReg$"],"sources":["D:/code/react-weather/src/shared/Popup/Popup.tsx"],"sourcesContent":["import React from \"react\";\r\nimport s from \"./Popup.module.scss\";\r\nimport { Item } from \"../../pages/home/components/ThisDayInfo/ThisDayInfo\"; \r\nimport { ThisDayItem } from \"../../pages/home/components/ThisDayInfo/ThisDayItem\"; \r\nimport { GlobalSwgSelector } from \"../../assets/icons/global/GlobalSwgSelector\";\r\nimport { WeatherData, ForecastItem } from \"../../services/weatherServices\";\r\n\r\ninterface PopupProps {\r\n  weatherData: WeatherData | ForecastItem | null;\r\n  onClose: () => void;\r\n  type: 'current' | 'forecast';\r\n}\r\n\r\nexport const Popup: React.FC<PopupProps> = ({ weatherData, onClose, type }) => {\r\n  if (!weatherData) return null;\r\n\r\n  const getDayOfWeek = (timestamp: number) => {\r\n    const days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n    return days[new Date(timestamp * 1000).getDay()];\r\n  };\r\n\r\n  const getTime = (timestamp: number) => {\r\n    return new Date(timestamp * 1000).toLocaleTimeString('ru-RU', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getWeatherIcon = (iconCode: string) => {\r\n    const iconMap: { [key: string]: string } = {\r\n      '01d': 'sun',\r\n      '01n': 'moon',\r\n      '02d': 'small_sun',\r\n      '02n': 'small_moon',\r\n      '03d': 'mainly_cloudy',\r\n      '03n': 'mainly_cloudy',\r\n      '04d': 'mainly_cloudy',\r\n      '04n': 'mainly_cloudy',\r\n      '09d': 'rain',\r\n      '09n': 'rain',\r\n      '10d': 'small_rain_sun',\r\n      '10n': 'small_rain_moon',\r\n      '11d': 'lightning',\r\n      '11n': 'lightning',\r\n      '13d': 'snow',\r\n      '13n': 'snow',\r\n      '50d': 'fog',\r\n      '50n': 'fog'\r\n    };\r\n    return iconMap[iconCode] || 'small_sun';\r\n  };\r\n\r\n  const isCurrentWeather = (data: WeatherData | ForecastItem): data is WeatherData => {\r\n    return type === 'current';\r\n  };\r\n\r\n  const items: Item[] = [\r\n    {\r\n      icon_id: 'temp',\r\n      name: 'Температура',\r\n      value: `${Math.round(weatherData.main.temp)}° - ощущается как ${Math.round(weatherData.main.feels_like)}°`\r\n    },\r\n    {\r\n      icon_id: 'pressure',\r\n      name: 'Давление',\r\n      value: `${weatherData.main.pressure} мм рт. ст.`\r\n    },\r\n    {\r\n      icon_id: 'humidity',\r\n      name: 'Влажность',\r\n      value: `${weatherData.main.humidity}%`\r\n    },\r\n    {\r\n      icon_id: 'wind',\r\n      name: \"Ветер\",\r\n      value: `${weatherData.wind.speed} м/с`\r\n    }\r\n  ];\r\n\r\n  const cityName = isCurrentWeather(weatherData) \r\n    ? `${weatherData.name}, ${weatherData.sys.country}`\r\n    : 'Прогноз';\r\n\r\n  return (\r\n    <>\r\n      <div className={s.blur} onClick={onClose}></div>\r\n      <div className={s.popup}>\r\n        <div className={s.day}>\r\n          <div className={s.day__temp}>{Math.round(weatherData.main.temp)}°</div>\r\n          <div className={s.day__name}>{getDayOfWeek(weatherData.dt)}</div>\r\n          <div className={s.day_img}>\r\n            <GlobalSwgSelector id={getWeatherIcon(weatherData.weather[0].icon)}/>\r\n          </div>\r\n          <div className={s.day__time}>\r\n            Время: <span>{getTime(weatherData.dt)}</span>\r\n          </div>\r\n          <div className={s.day__city}>\r\n            {type === 'current' ? 'Город:' : 'Прогноз:'} <span>{cityName}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.this_day_info_items}>\r\n          {items.map((item: Item) => (\r\n            <ThisDayItem key={item.icon_id} item={item} />\r\n          ))}\r\n        </div>\r\n        <div className={s.close} onClick={onClose}>\r\n          <GlobalSwgSelector id=\"close\"/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}