{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\react-weather\\\\src\\\\shared\\\\Header\\\\Header.tsx\";\nimport React from \"react\";\nimport s from \"./Header.module.scss\";\nimport { GlobalSwgSelector } from \"../../assets/icons/global/GlobalSwgSelector\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [{\n  value: 'Moscow',\n  label: 'Москва'\n}, {\n  value: 'Saint Petersburg',\n  label: 'Санкт-Петербург'\n}, {\n  value: 'Minsk',\n  label: 'Минск'\n}, {\n  value: 'Kiev',\n  label: 'Киев'\n}, {\n  value: 'London',\n  label: 'Лондон'\n}, {\n  value: 'New York',\n  label: 'Нью-Йорк'\n}];\nconst colorStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: \"rgba(71, 147, 255, 0.2)\",\n    width: \"194px\",\n    height: \"37px\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    zIndex: \"100\",\n    color: \"#000\"\n  })\n};\nexport const Header = ({\n  onCityChange,\n  currentCity\n}) => {\n  const handleCityChange = selectedOption => {\n    onCityChange(selectedOption.value);\n  };\n  const defaultCity = cities.find(city => city.value === currentCity) || cities[0];\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: s.header,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.logo,\n        children: /*#__PURE__*/_jsxDEV(GlobalSwgSelector, {\n          id: \"header-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.title,\n        children: \"React Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.changeTheme,\n        children: /*#__PURE__*/_jsxDEV(GlobalSwgSelector, {\n          id: \"change-theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        styles: colorStyles,\n        options: cities,\n        onChange: handleCityChange,\n        defaultValue: defaultCity,\n        value: defaultCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","s","GlobalSwgSelector","Select","jsxDEV","_jsxDEV","cities","value","label","colorStyles","control","styles","backgroundColor","width","height","border","borderRadius","zIndex","color","Header","onCityChange","currentCity","handleCityChange","selectedOption","defaultCity","find","city","className","header","children","wrapper","logo","id","fileName","_jsxFileName","lineNumber","columnNumber","title","changeTheme","options","onChange","defaultValue","_c","$RefreshReg$"],"sources":["D:/code/react-weather/src/shared/Header/Header.tsx"],"sourcesContent":["import React from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport { GlobalSwgSelector } from \"../../assets/icons/global/GlobalSwgSelector\";\r\nimport Select from 'react-select';\r\n\r\ninterface Props {\r\n  onCityChange: (city: string) => void;\r\n  currentCity: string;\r\n}\r\n\r\nconst cities = [\r\n  { value: 'Moscow', label: 'Москва' },\r\n  { value: 'Saint Petersburg', label: 'Санкт-Петербург' },\r\n  { value: 'Minsk', label: 'Минск' },\r\n  { value: 'Kiev', label: 'Киев' },\r\n  { value: 'London', label: 'Лондон' },\r\n  { value: 'New York', label: 'Нью-Йорк' }\r\n];\r\n\r\nconst colorStyles = {\r\n  control: (styles: any) => ({ \r\n    ...styles, \r\n    backgroundColor: \"rgba(71, 147, 255, 0.2)\", \r\n    width: \"194px\", \r\n    height: \"37px\", \r\n    border: \"none\", \r\n    borderRadius: \"10px\", \r\n    zIndex: \"100\",\r\n    color: \"#000\"\r\n  }),\r\n};\r\n\r\nexport const Header: React.FC<Props> = ({ onCityChange, currentCity }) => {\r\n  const handleCityChange = (selectedOption: any) => {\r\n    onCityChange(selectedOption.value);\r\n  };\r\n\r\n  const defaultCity = cities.find(city => city.value === currentCity) || cities[0];\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.wrapper}>\r\n        <div className={s.logo}><GlobalSwgSelector id=\"header-logo\" /></div>\r\n        <div className={s.title}>React Weather</div>\r\n      </div>\r\n\r\n      <div className={s.wrapper}>\r\n        <div className={s.changeTheme}>\r\n          <GlobalSwgSelector id=\"change-theme\" />\r\n        </div>\r\n        <Select \r\n          styles={colorStyles} \r\n          options={cities} \r\n          onChange={handleCityChange}\r\n          defaultValue={defaultCity}\r\n          value={defaultCity}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}