{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\react-weather\\\\src\\\\pages\\\\home\\\\components\\\\home.tsx\",\n  _s = $RefreshSig$();\n// pages/home/components/home.tsx\nimport React, { useState, useEffect } from \"react\";\nimport s from \"./home.module.scss\";\nimport ThisDay from \"./ThisDay/ThisDay\";\nimport ThisDayInfo from \"./ThisDayInfo/ThisDayInfo\";\nimport Days from \"./Days/Days\";\nimport { fetchCurrentWeather } from \"../../../services/weatherServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = ({\n  onOpenPopup\n}) => {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  useEffect(() => {\n    // Загружаем погоду по умолчанию при загрузке компонента\n    const loadDefaultWeather = async () => {\n      try {\n        const weather = await fetchCurrentWeather(\"Moscow\");\n        setCurrentWeather(weather);\n      } catch (error) {\n        console.error(\"Error loading weather:\", error);\n      }\n    };\n    loadDefaultWeather();\n  }, []);\n  const handleThisDayClick = () => {\n    if (currentWeather) {\n      onOpenPopup(currentWeather);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.home,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.wrpapper,\n      children: [/*#__PURE__*/_jsxDEV(ThisDay, {\n        weatherData: currentWeather,\n        onClick: handleThisDayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThisDayInfo, {\n        weatherData: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Days, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"WlxHLHquYUlh2IeVZ2IStYG9LSU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","s","ThisDay","ThisDayInfo","Days","fetchCurrentWeather","jsxDEV","_jsxDEV","Home","onOpenPopup","_s","currentWeather","setCurrentWeather","loadDefaultWeather","weather","error","console","handleThisDayClick","className","home","children","wrpapper","weatherData","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/code/react-weather/src/pages/home/components/home.tsx"],"sourcesContent":["// pages/home/components/home.tsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport s from \"./home.module.scss\";\r\nimport ThisDay from \"./ThisDay/ThisDay\";\r\nimport ThisDayInfo from \"./ThisDayInfo/ThisDayInfo\";\r\nimport Days from \"./Days/Days\";\r\nimport { WeatherData, fetchCurrentWeather } from \"../../../services/weatherServices\"\r\n\r\ninterface HomeProps {\r\n  onOpenPopup: (weatherData: WeatherData) => void;\r\n}\r\n\r\nexport const Home: React.FC<HomeProps> = ({ onOpenPopup }) => {\r\n  const [currentWeather, setCurrentWeather] = useState<WeatherData | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Загружаем погоду по умолчанию при загрузке компонента\r\n    const loadDefaultWeather = async () => {\r\n      try {\r\n        const weather = await fetchCurrentWeather(\"Moscow\");\r\n        setCurrentWeather(weather);\r\n      } catch (error) {\r\n        console.error(\"Error loading weather:\", error);\r\n      }\r\n    };\r\n\r\n    loadDefaultWeather();\r\n  }, []);\r\n\r\n  const handleThisDayClick = () => {\r\n    if (currentWeather) {\r\n      onOpenPopup(currentWeather);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.home}>\r\n      <div className={s.wrpapper}>\r\n        <ThisDay \r\n          weatherData={currentWeather} \r\n          onClick={handleThisDayClick}\r\n        />\r\n        <ThisDayInfo weatherData={currentWeather} />\r\n      </div>\r\n      <Days />\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,oBAAoB;AAClC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAAsBC,mBAAmB,QAAQ,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMpF,OAAO,MAAMC,IAAyB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAqB,IAAI,CAAC;EAE9EC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMT,mBAAmB,CAAC,QAAQ,CAAC;QACnDO,iBAAiB,CAACE,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDF,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIN,cAAc,EAAE;MAClBF,WAAW,CAACE,cAAc,CAAC;IAC7B;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKW,SAAS,EAAEjB,CAAC,CAACkB,IAAK;IAAAC,QAAA,gBACrBb,OAAA;MAAKW,SAAS,EAAEjB,CAAC,CAACoB,QAAS;MAAAD,QAAA,gBACzBb,OAAA,CAACL,OAAO;QACNoB,WAAW,EAAEX,cAAe;QAC5BY,OAAO,EAAEN;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFpB,OAAA,CAACJ,WAAW;QAACmB,WAAW,EAAEX;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACNpB,OAAA,CAACH,IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnCWF,IAAyB;AAAAoB,EAAA,GAAzBpB,IAAyB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}